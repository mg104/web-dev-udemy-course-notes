HTML:

1.) Tags: <h1> ; Elements: <h1>*text*</h1>
2.) Headings: <h1> to <h6>
3.) Paragraphs: <p></p> ; Used to separate lines from each other
4.) Horizontal rule: <hr /> ; Used to insert a horizontal line
5.) Break: <br /> ; Used to separate lines WITHIN A PARAGRAPH (not making new paragraph)
6.) Ordered lists: Used to make numbered lists ;
        
    Code:
    <ol>My Items:
        <li>Item 1</li> <---li tag means "list item"
        <li>Item 2</li>
    </ol>
    
    Output:
    My Items:
        1. Item 1
        2. Item 2
7.) Unordered lists: Used to make lists with bullet points;

    Code:
    <ul>My Items:
        <li>Item 1</li> <---li tag means "list item"
        <li>Item 2</li>
    </ul>
    
    Output:
    My Items:
        . Item 1
        . Item 2

8.) Attributes: Some elements can have attributes with values. These elements are known as Anchor elements. Note that attribute values are always enclosed within quotes, to distinguish them from the other HTML code (like tags, etc)

    Code: <a href="https://www.google.com">Google<a>
    Output: Google
        When you click on Google above, it takes you to Google.com in the browser.

9.) Image elements: <img src="image location" alt="image description"/> ; This is like a void element (no text) and hence doesn't have a closing tag. It is used to display an image. src is used to specify image location (on the internet or local) and alt is used to describe images for the visually impaired who might use screen-reader.

10.) Image elements can go inside Anchor (<a>) tags:

    Code: <a href="..."> 
                <img src="" />
          </a>
    Output: An image that contains embedded link. When we hover mouse over the image it turns into a "hand" and we can click on it to go to the embedded link in <a> tag.

11.) While embedding pages or images into a website, you can use absolute paths (absolute paths like in linux) or relative paths (relative to the location of the html page in which you're referring to the embedded page or image) using ./ or ../ syntax.

12.) CSS (Cascading Style Sheets) is a programming language used to add styling to HTML. There are 3 ways of adding CSS styling to an HTML file:

    a.) Inline: Mention the styling inside the tag of the element that you want to style:
        Code : <html style="style-attribute:style-value">...</html>
        This will only style the particular element, and is generally not used.

    b.) Internal: Mention the styling anywhere in the HTML document that you want to add style to:
        Code:   <html>
                    <style>
                        html{
                            style-attribute:style-value
                        }
                    </style>
                </html>
        This applies the styling only to a particular html page only and the styling cannot be applied to multiple pages at once from only this code.
        Put the code for css in <head> for this.

    c.) External: Mention the styling as a XYZ.css (like: styles.css or main.css, or anything else) in the project files, and add the mention to this file in the html files.
        Code:   
                index.html:

                <html>
                    <link 
                        rel="stylesheet" 
                        href="./styles.css"
                    />
                </html>

                styles.css:

                html{
                    style-attribute:style-value
                }
        This is the most commonly used way of adding css styling to html pages.
        Put the code for css in <head> for this.

13.) CSS Selectors: In .css files, select the HTML elements to style in the following manner:
    
    a.) For selecting all elements with tag abc: abc{}
    b.) For selecting all elements having class=class-value: .class-value{} 
    c.) For selecting all elements having id=id-value: #id-value{}
    d.) For selecting all elements having tag abc with attribute1: abc[attribute1]{}
    e.) For selecting all elements with tag abc having attribute1="attribute1-value": abc[attribute1="attribute1-value"]{}
    f.) For selecting all elements in a page: *{}

14.) CSS Colors: Name colors in CSS using alphabetical names of colors, or their hexadecimal codes, like "darkgreen" or "#FAF8F1"

15.) To get different free fonts:
    a.) Go to https://fonts.google.com/
    b.) Select the fonts that you want 
    c.) Search and select the fonts you want
    d.) Go to "View Selected Families" on the top-right of the page
    e.) Copy the code in <link> section and paste it in the <head> portion of your html page's code
    f.) Copy the code in "CSS rules to specify families" and use it in the styles.css file of your project.

16.) Chrome Inspecting tool: This is mainly used to inspect other websites' webpages that we might like. To use Chrome inspecting tool, do the following:
    a.) Right-click on an element in a webpage OR press Ctrl+Shift+I
    b.) Press Ctrl+Shift+C for automatically select the html code and css code for any element in the webpage
    c.) Select "Styles" tab to view the CSS styling of the selected element. Note that there are always some "default" values supplied by the browser to an element, which can be over-ridden using our own specified CSS styling. Our changes will be applied rather than default values then.
    d.) Select "Computed" to see the final "computed" values of different fonts and other styling finally applied to the element. "Computed" means, for example, the final values that were computed (say 2 * 100px = 200px) from the raw values (say 2rem).

17.) Box Model: In an HTML document, every element is actually inside an invisible box. This box has the following 4 measurements:
    
    a.) Box: This is the box containing the element. It's dimensions can be set by setting "height" and "width" of the element
    b.) Border: This is the border around the box. It's thickness on 4 sides can be set by setting it like so- border: size style color (for example: border: 10px solid black, OR border: 20px dashed grey, etc).
        We can also set the width of each of the 4 sides of the border by setting: 
        a.) border-width: px (for example: border-width: 10px) - This sets the border width of top, right, bottom and left to 10px each
        b.) border-width: top&bottompx left&rightpx(for example: border-width: 10px 20px) - This sets the border width of top and bottom to 10px, and left and right to 20px.
        c.) border-width: toppx rightpx bottompx leftpx (for example: border-width: 10px 20px 30px 40px) - This sets the size of top to 10px, right to 20px, bottom to 30px and left to 40px.
    c.) Padding: This is the box that can be put between the inside box and the border. It is set in a manner similar to setting the dimensions of the Border.
    d.) Margin: This is the box that can be outside the border. It is set in a manner similar to setting the dimensions of the Border.

    Note that since these boxes are usually invisible in a webpage as they're mainly used to align different elements on a webpage, they might cause a CSS file to behave abnormally and it might be difficult to troubleshoot problems due to the invisible padding from them in a webpage. To make troubleshooting issues due to them easier, use a tool called "Pesticide" in Google Chrome.

18.) Cascade/How to resolve conflicting CSS styling rules: There can be a scenario where we may have applied different styling rules to the same html element. If this is the case, then the rules listed out in the picture/diagram "./CSS-cascade-importance-rules" will be applied, in a "cascading" manner, i.e., the rules towards left and lower side will be more important than rules in right and upper side of the picture/diagram

19.) 








